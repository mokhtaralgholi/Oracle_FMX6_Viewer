package info.phosco.forms.translate.element.visual.substruct;

public enum Color {

	// row 1
	BLACK(0x0),
	WHITE(0x1),
	GREEN(0x2),
	DARKGREEN(0x3),
	GRAY96(0x4),
	GRAY92(0x5),
	GRAY88(0x6),
	GRAY84(0x7),
	R0G0B0(0x8),
	R25G0B0(0x9),
	R50G0B0(0xa),
	R75G0B0(0xb),
	R88G0B0(0xc),
	R100G0B0(0xd),
	R0G0B50(0xe),
	R25G0B50(0xf),
	R50G0B50(0x10),
	R75G0B50(0x11),
	R88G0B50(0x12),
	R100G0B50(0x13),
	R0G0B75(0x14),
	R25G0B75(0x15),
	R50G0B75(0x16),
	R75G0B75(0x17),
	R88G0B75(0x18),
	R100G0B75(0x19),
	R0G0B88(0x1a),
	R25G0B88(0x1b),
	R50G0B88(0x1c),
	R75G0B88(0x1d),
	R88G0B88(0x1e),
	R100G0B88(0x1f),
	R0G0B100(0x20),
	R25G0B100(0x21),
	R50G0B100(0x22),
	R75G0B100(0x23),
	R88G0B100(0x24),
	R100G0B100(0x25),
	// row 2
	GRAY(0x26),
	DARKGRAY(0x27),
	CYAN(0x28),
	DARKCYAN(0x29),
	GRAY80(0x2a),
	GRAY76(0x2b),
	GRAY72(0x2c),
	GRAY68(0x2d),
	R0G25B0(0x2e),
	R25G25B0(0x2f),
	R50G25B0(0x30),
	R75G25B0(0x31),
	R88G25B0(0x32),
	R100G25B0(0x33),
	R0G25B50(0x34),
	R25G25B50(0x35),
	R50G25B50(0x36),
	R75G25B50(0x37),
	R88G25B50(0x38),
	R100G25B50(0x39),
	R0G25B75(0x3a),
	R25G25B75(0x3b),
	R50G25B75(0x3c),
	R75G25B75(0x3d),
	R88G25B75(0x3e),
	R100G25B75(0x3f),
	R0G25B88(0x40),
	R25G25B88(0x41),
	R50G25B88(0x42),
	R75G25B88(0x43),
	R88G25B88(0x44),
	R100G25B88(0x45),
	R0G25B100(0x46),
	R25G25B100(0x47),
	R50G25B100(0x48),
	R75G25B100(0x49),
	R88G25B100(0x4a),
	R100G25B100(0x4b),
	// row 3
	RED(0x4c),
	DARKRED(0x4d),
	BLUE(0x4e),
	DARKBLUE(0x4f),
	GRAY64(0x50),
	GRAY60(0x51),
	GRAY56(0x52),
	GRAY52(0x53),
	R0G50B0(0x54),
	R25G50B0(0x55),
	R50G50B0(0x56),
	R75G50B0(0x57),
	R88G50B0(0x58),
	R100G50B0(0x59),
	R0G50B50(0x5a),
	R25G50B50(0x5b),
	R50G50B50(0x5c),
	R75G50B50(0x5d),
	R88G50B50(0x5e),
	R100G50B50(0x5f),
	R0G50B75(0x60),
	R25G50B75(0x61),
	R50G50B75(0x62),
	R75G50B75(0x63),
	R88G50B75(0x64),
	R100G50B75(0x65),
	R0G50B88(0x66),
	R25G50B88(0x67),
	R50G50B88(0x68),
	R75G50B88(0x69),
	R88G50B88(0x6a),
	R100G50B88(0x6b),
	R0G50B100(0x6c),
	R25G50B100(0x6d),
	R50G50B100(0x6e),
	R75G50B100(0x6f),
	R88G50B100(0x70),
	R100G50B100(0x71),
	// row 4
	YELLOW(0x72),
	DARKYELLOW(0x73),
	MAGENTA(0x74),
	DARKMAGENTA(0x75),
	GRAY48(0x76),
	GRAY44(0x77),
	GRAY40(0x78),
	GRAY36(0x79),
	R0G75B0(0x7a),
	R25G75B0(0x7b),
	R50G75B0(0x7c),
	R75G75B0(0x7d),
	R88G75B0(0x7e),
	R100G75B0(0x7f),
	R0G75B50(0x80),
	R25G75B50(0x81),
	R50G75B50(0x82),
	R75G75B50(0x83),
	R88G75B50(0x84),
	R100G75B50(0x85),
	R0G75B75(0x86),
	R25G75B75(0x87),
	R50G75B75(0x88),
	R75G75B75(0x89),
	R88G75B75(0x8a),
	R100G75B75(0x8b),
	R0G75B88(0x8c),
	R25G75B88(0x8d),
	R50G75B88(0x8e),
	R75G75B88(0x8f),
	R88G75B88(0x90),
	R100G75B88(0x91),
	R0G75B100(0x92),
	R25G75B100(0x93),
	R50G75B100(0x94),
	R75G75B100(0x95),
	R88G75B100(0x96),
	R100G75B100(0x97),
	// row 5
	CUSTOM1(0x98),
	CUSTOM2(0x99),
	CUSTOM3(0x9a),
	CUSTOM4(0x9b),
	GRAY32(0x9c),
	GRAY28(0x9d),
	GRAY24(0x9e),
	GRAY20(0x9f),
	R0G88B0(0xa0),
	R25G88B0(0xa1),
	R50G88B0(0xa2),
	R75G88B0(0xa3),
	R88G88B0(0xa4),
	R100G88B0(0xa5),
	R0G88B50(0xa6),
	R25G88B50(0xa7),
	R50G88B50(0xa8),
	R75G88B50(0xa9),
	R88G88B50(0xaa),
	R100G88B50(0xab),
	R0G88B75(0xac),
	R25G88B75(0xad),
	R50G88B75(0xae),
	R75G88B75(0xaf),
	R88G88B75(0xb0),
	R100G88B75(0xb1),
	R0G88B88(0xb2),
	R25G88B88(0xb3),
	R50G88B88(0xb4),
	R75G88B88(0xb5),
	R88G88B88(0xb6),
	R100G88B88(0xb7),
	R0G88B100(0xb8),
	R25G88B100(0xb9),
	R50G88B100(0xba),
	R75G88B100(0xbb),
	R88G88B100(0xbc),
	R100G88B100(0xbd),
	// row 6
	CUSTOM5(0xbe),
	CUSTOM6(0xbf),
	CUSTOM7(0xc0),
	CUSTOM8(0xc1),
	GRAY16(0xc2),
	GRAY12(0xc3),
	GRAY8(0xc4),
	GRAY4(0xc5),
	R0G100B0(0xc6),
	R25G100B0(0xc7),
	R50G100B0(0xc8),
	R75G100B0(0xc9),
	R88G100B0(0xca),
	R100G100B0(0xcb),
	R0G100B50(0xcc),
	R25G100B50(0xcd),
	R50G100B50(0xce),
	R75G100B50(0xcf),
	R88G100B50(0xd0),
	R100G100B50(0xd1),
	R0G100B75(0xd2),
	R25G100B75(0xd3),
	R50G100B75(0xd4),
	R75G100B75(0xd5),
	R88G100B75(0xd6),
	R100G100B75(0xd7),
	R0G100B88(0xd8),
	R25G100B88(0xd9),
	R50G100B88(0xda),
	R75G100B88(0xdb),
	R88G100B88(0xdc),
	R100G100B88(0xdd),
	R0G100B100(0xde),
	R25G100B100(0xdf),
	R50G100B100(0xe0),
	R75G100B100(0xe1),
	R88G100B100(0xe2),
	R100G100B100(0xe3),
	// this comes from the DEFAULT Visual Group, which color name?
	DEFAULT(0xe4);

	private final int color;

	private Color(int color) {
		this.color = color;
	}

	public static Color lookup(int color) {
		for (Color t : Color.values()) {
			if (t.color == color) {
				return t;
			}
		}
//		throw new IllegalArgumentException("Unknown Color " + Integer.toHexString(color));
return Color.DEFAULT;
	}

	// TODO: overwrite it on every enum value
	public int getRed() {
		return 100;
	}

	public int getGreen() {
		return 100;
	}

	public int getBlue() {
		return 100;
	}
}
