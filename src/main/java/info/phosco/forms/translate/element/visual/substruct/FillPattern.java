package info.phosco.forms.translate.element.visual.substruct;

public enum FillPattern {

	TRANSPARENT(0x0),
	SOLID(0x1),
	GRAY3_3(0x2),
	GRAY6_6(0x3),
	GRAY10(0x4),
	GRAY13_3(0x5),
	GRAY16_6(0x6),
	GRAY20(0x7),
	GRAY23_3(0x8),
	GRAY25(0x9),
	GRAY26_6(0xA),
	GRAY30(0xB),
	GRAY33_3(0xC),
	GRAY36_6(0xD),
	GRAY40(0xE),
	GRAY43_3(0xF),
	GRAY46_6(0x10),
	GRAY50(0x11),
	GRAY53_3(0x12),
	GRAY56_6(0x13),
	GRAY60(0x14),
	GRAY63_3(0x15),
	GRAY66_6(0x16),
	GRAY70(0x17),
	GRAY73_3(0x18),
	GRAY75(0x19),
	GRAY76_6(0x1A),
	GRAY80(0x1B),
	GRAY83_3(0x1C),
	GRAY86_6(0x1D),
	GRAY90(0x1E),
	GRAY93_3(0x1F),
	GRAY96_6(0x20),
	HLINES1(0x21),
	HLINES2(0x22),
	HLINES3(0x23),
	HLINES4(0x24),
	HLINES5(0x25),
	HLINES6(0x26),
	HLINES7(0x27),
	VLINES1(0x28),
	VLINES2(0x29),
	VLINES3(0x2A),
	VLINES4(0x2B),
	VLINES5(0x2C),
	VLINES6(0x2D),
	VLINES7(0x2E),
	THINLINE135(0x2F),
	MEDLINE45(0x30),
	THICKLINE45(0x31),
	MULTITHIN45(0x32),
	MULTIMED45(0x33),
	WAVE45(0x34),
	MEDLINE135(0x35),
	THICKLINE135(0x36),
	THINLINE45(0x37),
	MULTITHIN135(0x38),
	MULTIMED135(0x39),
	ARROWS(0x3A),
	BALLS(0x3B),
	BAMBOO(0x3C),
	BRICK(0x3D),
	BRICKREV(0x3E),
	BRICKSIDE(0x3F),
	BRICKSIDE2(0x40),
	BRICKSIDEWAYS(0x41),
	BUMPS(0x42),
	CARROT(0x43),
	CARROT2(0x44),
	CHAIR(0x45),
	CHECKER(0x46),
	CHECKER2(0x47),
	CORN(0x48),
	CRISSCROSS(0x49),
	CRISSCROSSTHIN(0x4A),
	REVCRISSTHIN(0x4B),
	REVCRISSTHICK(0x4C),
	CURVES1(0x4D),
	DASHHLINE(0x4E),
	DIAMOND(0x4F),
	DIAMONDDARK(0x50),
	DIAMONDS(0x51),
	FANS(0x52),
	FENCE(0x53),
	FISH(0x54),
	FLOWERS(0x55),
	FLOWERS2(0x56),
	GOLDCHAIN(0x57),
	GRID(0x58),
	REVGRID(0x59),
	GRIDTHIN(0x5A),
	HOPI(0x5B),
	KANGAROO(0x5C),
	LINOLEUM1(0x5D),
	LINOLEUM2(0x5E),
	LINOLEUM3(0x5F),
	LOOPS(0x60),
	MEDBOX(0x61),
	PAGODAS(0x62),
	PLAID(0x63),
	POWDER(0x64),
	SANDPAPER(0x65),
	SHINGLES(0x66),
	SPECS(0x67),
	SPIKES(0x68),
	SQUARES(0x69),
	REVSQUARES(0x6A),
	STITCHING(0x6B),
	SWEATERPATTERN(0x6C),
	THICKBOX(0x6D),
	THINBOX(0x6E),
	TILE1(0x6F),
	V45WAVES(0x70),
	VDASHLINE(0x71),
	WALKER(0x72),
	WAVES(0x73),
	WAVY(0x74),
	WAVY2(0x75),
	WEAVE1(0x76),
	WEAVE2(0x77),
	WEAVE3(0x78),
	// TODO: ?
	NONE(0xFF);

	private final int pattern;

	private FillPattern(int pattern) {
		this.pattern = pattern;
	}

	public static FillPattern lookup(int pattern) {
		for (FillPattern t : FillPattern.values()) {
			if (t.pattern == pattern) {
				return t;
			}
		}
//		throw new IllegalArgumentException("Unknown FillPattern " + Integer.toHexString(pattern));
return FillPattern.NONE;
	}
}
